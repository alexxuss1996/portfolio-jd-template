{"version":3,"sources":["typewriter.js","app.js"],"names":["TypeWriter","txtElement","words","wait","arguments","length","undefined","_classCallCheck","this","txt","wordIndex","parseInt","type","isDeleting","_this","current","fullTxt","substring","innerHTML","concat","typeSpeed","setTimeout","init","document","querySelector","JSON","parse","getAttribute","addEventListener"],"mappings":"uZACAA,sBACA,SAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAA,IAAAG,gBAAAC,KAAAR,GACAQ,KAAAP,WAAAA,EACAO,KAAAN,MAAAA,EACAM,KAAAC,IAAA,GACAD,KAAAE,UAAA,EACAF,KAAAL,KAAAQ,SAAAR,EAAA,IACAK,KAAAI,OACAJ,KAAAK,YAAA,sDAGA,IAAAC,EAAAN,KAEAO,EAAAP,KAAAE,UAAAF,KAAAN,MAAAG,OAEAW,EAAAR,KAAAN,MAAAa,GAGAP,KAAAK,WAEAL,KAAAC,IAAAO,EAAAC,UAAA,EAAAT,KAAAC,IAAAJ,OAAA,GAGAG,KAAAC,IAAAO,EAAAC,UAAA,EAAAT,KAAAC,IAAAJ,OAAA,GAIAG,KAAAP,WAAAiB,UAAA,qBAAAC,OAAAX,KAAAC,IAAA,WAGA,IAAAW,EAAA,IAEAZ,KAAAK,aACAO,GAAA,GAIAZ,KAAAK,YAAAL,KAAAC,MAAAO,EAKAR,KAAAK,YAAA,KAAAL,KAAAC,MACAD,KAAAK,YAAA,EAEAL,KAAAE,YAEAU,EAAA,MARAA,EAAAZ,KAAAL,KAEAK,KAAAK,YAAA,GASAQ,YAAA,WAAA,OAAAP,EAAAF,SAAAQ,YAQA,SAAAE,OACA,IAAArB,EAAAsB,SAAAC,cAAA,aACAtB,EAAAuB,KAAAC,MAAAzB,EAAA0B,aAAA,eACAxB,EAAAF,EAAA0B,aAAA,aAEA,IAAA3B,WAAAC,EAAAC,EAAAC,GARAoB,SAAAK,iBAAA,mBAAAN,MCvDAC,SAAAK,iBAAA,oBAAA","file":"app.min.js","sourcesContent":["// TypeWriter.js\nclass TypeWriter {\n  constructor(txtElement, words, wait = 3000) {\n    this.txtElement = txtElement;\n    this.words = words;\n    this.txt = '';\n    this.wordIndex = 0;\n    this.wait = parseInt(wait, 10);\n    this.type();\n    this.isDeleting = false;\n  }\n\n  type() {\n    // Current index of word\n    const current = this.wordIndex % this.words.length;\n    // Get full text of current word\n    const fullTxt = this.words[current];\n\n    // Check if deleting\n    if (this.isDeleting) {\n      // Remove char\n      this.txt = fullTxt.substring(0, this.txt.length - 1);\n    } else {\n      // Add char\n      this.txt = fullTxt.substring(0, this.txt.length + 1);\n    }\n\n    // Insert txt into element\n    this.txtElement.innerHTML = `<span class=\"txt\">${this.txt}</span>`;\n\n    // Initial Type Speed\n    let typeSpeed = 300;\n\n    if (this.isDeleting) {\n      typeSpeed /= 2;\n    }\n\n    // If word is complete\n    if (!this.isDeleting && this.txt === fullTxt) {\n      // Make pause at end\n      typeSpeed = this.wait;\n      // Set delete to true\n      this.isDeleting = true;\n    } else if (this.isDeleting && this.txt === '') {\n      this.isDeleting = false;\n      // Move to next word\n      this.wordIndex++;\n      // Pause before start typing\n      typeSpeed = 500;\n    }\n\n    setTimeout(() => this.type(), typeSpeed);\n  }\n}\n\n// Init On DOM Load\ndocument.addEventListener('DOMContentLoaded', init);\n\n// Init App\nfunction init() {\n  const txtElement = document.querySelector('.txt-type');\n  const words = JSON.parse(txtElement.getAttribute('data-words'));\n  const wait = txtElement.getAttribute('data-wait');\n  // Init TypeWriter\n  new TypeWriter(txtElement, words, wait);\n}\n","// Execute On DOM Load\ndocument.addEventListener('DOMContentLoaded', function () {\n  \n});\n"]}